#version 330 core

in vec3 position;

out vec4 clipSpace;
out vec2 textureCoords;
out vec3 toCameraVector;
out vec3 formLightVector;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;		//deep Matrix
uniform mat4 viewMatrix;			//camera Matrix
uniform vec3 cameraPosition;
uniform vec3 lightPosition;

const float titing = 2.0;

void main(void){

   vec4 worldPosition = transformationMatrix * vec4(position.x, 0.0, position.z,  1.0);

   clipSpace = projectionMatrix * viewMatrix * worldPosition;

   gl_Position = clipSpace;

   textureCoords = vec2(position.x / 2.0 + 0.5, position.z / 2.0 + 0.5) * titing;
   toCameraVector = cameraPosition - worldPosition.xyz;
   formLightVector = worldPosition.xyz - lightPosition;
}