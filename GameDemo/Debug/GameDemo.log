cl : 命令行 warning D9007: “/Gm”需要“/Zi 或 /ZI”；选项被忽略
  Grasses.cpp
d:\opengl\demo\gamedemo\gamedemo\GrassesShader.h(44): warning C5030: 未识别属性“nodiscard”
Grasses.cpp(30): warning C4305: “参数”: 从“double”到“float”截断
D:\vs2015\VC\include\xmemory0(737): error C2661: “Blade::Blade”: 没有重载函数接受 4 个参数
  D:\vs2015\VC\include\xmemory0(857): note: 参见对正在编译的函数 模板 实例化“void std::allocator<_Ty>::construct<_Objty,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(_Objty *,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Ty=Blade,
              _Objty=Blade
          ]
  D:\vs2015\VC\include\xmemory0(857): note: 参见对正在编译的函数 模板 实例化“void std::allocator<_Ty>::construct<_Objty,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(_Objty *,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Ty=Blade,
              _Objty=Blade
          ]
  D:\vs2015\VC\include\xmemory0(996): note: 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(std::allocator<_Ty> &,_Objty *,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Alloc=std::allocator<Blade>,
              _Ty=Blade,
              _Objty=Blade
          ]
  D:\vs2015\VC\include\xmemory0(995): note: 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(std::allocator<_Ty> &,_Objty *,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Alloc=std::allocator<Blade>,
              _Ty=Blade,
              _Objty=Blade
          ]
  D:\vs2015\VC\include\vector(930): note: 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(_Ty *,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Ty=Blade
          ]
  D:\vs2015\VC\include\vector(929): note: 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(_Ty *,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Ty=Blade
          ]
  Grasses.cpp(45): note: 参见对正在编译的函数 模板 实例化“void std::vector<Blade,std::allocator<_Ty>>::emplace_back<glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Ty=Blade
          ]
  Grasses.cpp(41): note: 参见对正在编译的函数 模板 实例化“void std::vector<Blade,std::allocator<_Ty>>::emplace_back<glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>,glm::tvec4<float,0>>(glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&,glm::tvec4<float,0> &&)”的引用
          with
          [
              _Ty=Blade
          ]
